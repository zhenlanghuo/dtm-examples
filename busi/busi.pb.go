// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.24.4
// source: busi/busi.proto

package busi

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DtmRequest request sent to dtm server
type ReqGrpc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount         int64  `protobuf:"varint,1,opt,name=Amount,proto3" json:"Amount,omitempty"`
	TransOutResult string `protobuf:"bytes,2,opt,name=TransOutResult,proto3" json:"TransOutResult,omitempty"`
	TransInResult  string `protobuf:"bytes,3,opt,name=TransInResult,proto3" json:"TransInResult,omitempty"`
}

func (x *ReqGrpc) Reset() {
	*x = ReqGrpc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_busi_busi_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGrpc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGrpc) ProtoMessage() {}

func (x *ReqGrpc) ProtoReflect() protoreflect.Message {
	mi := &file_busi_busi_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGrpc.ProtoReflect.Descriptor instead.
func (*ReqGrpc) Descriptor() ([]byte, []int) {
	return file_busi_busi_proto_rawDescGZIP(), []int{0}
}

func (x *ReqGrpc) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ReqGrpc) GetTransOutResult() string {
	if x != nil {
		return x.TransOutResult
	}
	return ""
}

func (x *ReqGrpc) GetTransInResult() string {
	if x != nil {
		return x.TransInResult
	}
	return ""
}

type BusiReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *BusiReply) Reset() {
	*x = BusiReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_busi_busi_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BusiReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusiReply) ProtoMessage() {}

func (x *BusiReply) ProtoReflect() protoreflect.Message {
	mi := &file_busi_busi_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusiReply.ProtoReflect.Descriptor instead.
func (*BusiReply) Descriptor() ([]byte, []int) {
	return file_busi_busi_proto_rawDescGZIP(), []int{1}
}

func (x *BusiReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GiveGiftReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GiftOrderId string `protobuf:"bytes,1,opt,name=giftOrderId,proto3" json:"giftOrderId,omitempty"`
}

func (x *GiveGiftReq) Reset() {
	*x = GiveGiftReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_busi_busi_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiveGiftReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiveGiftReq) ProtoMessage() {}

func (x *GiveGiftReq) ProtoReflect() protoreflect.Message {
	mi := &file_busi_busi_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiveGiftReq.ProtoReflect.Descriptor instead.
func (*GiveGiftReq) Descriptor() ([]byte, []int) {
	return file_busi_busi_proto_rawDescGZIP(), []int{2}
}

func (x *GiveGiftReq) GetGiftOrderId() string {
	if x != nil {
		return x.GiftOrderId
	}
	return ""
}

type GiveGiftRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GiftOrderId string `protobuf:"bytes,1,opt,name=giftOrderId,proto3" json:"giftOrderId,omitempty"`
}

func (x *GiveGiftRsp) Reset() {
	*x = GiveGiftRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_busi_busi_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GiveGiftRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GiveGiftRsp) ProtoMessage() {}

func (x *GiveGiftRsp) ProtoReflect() protoreflect.Message {
	mi := &file_busi_busi_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GiveGiftRsp.ProtoReflect.Descriptor instead.
func (*GiveGiftRsp) Descriptor() ([]byte, []int) {
	return file_busi_busi_proto_rawDescGZIP(), []int{3}
}

func (x *GiveGiftRsp) GetGiftOrderId() string {
	if x != nil {
		return x.GiftOrderId
	}
	return ""
}

type PayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayOrderId  string `protobuf:"bytes,1,opt,name=payOrderId,proto3" json:"payOrderId,omitempty"`
	GiftOrderId string `protobuf:"bytes,2,opt,name=giftOrderId,proto3" json:"giftOrderId,omitempty"`
}

func (x *PayReq) Reset() {
	*x = PayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_busi_busi_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayReq) ProtoMessage() {}

func (x *PayReq) ProtoReflect() protoreflect.Message {
	mi := &file_busi_busi_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayReq.ProtoReflect.Descriptor instead.
func (*PayReq) Descriptor() ([]byte, []int) {
	return file_busi_busi_proto_rawDescGZIP(), []int{4}
}

func (x *PayReq) GetPayOrderId() string {
	if x != nil {
		return x.PayOrderId
	}
	return ""
}

func (x *PayReq) GetGiftOrderId() string {
	if x != nil {
		return x.GiftOrderId
	}
	return ""
}

var File_busi_busi_proto protoreflect.FileDescriptor

var file_busi_busi_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x04, 0x62, 0x75, 0x73, 0x69, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63, 0x12,
	0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x25, 0x0a, 0x09, 0x42, 0x75, 0x73, 0x69, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2f, 0x0a, 0x0b,
	0x47, 0x69, 0x76, 0x65, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x67,
	0x69, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x67, 0x69, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2f, 0x0a,
	0x0b, 0x47, 0x69, 0x76, 0x65, 0x47, 0x69, 0x66, 0x74, 0x52, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b,
	0x67, 0x69, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x67, 0x69, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x4a,
	0x0a, 0x06, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x69, 0x66, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67,
	0x69, 0x66, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x32, 0x88, 0x0e, 0x0a, 0x04, 0x42,
	0x75, 0x73, 0x69, 0x12, 0x32, 0x0a, 0x07, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x6e, 0x12, 0x0d,
	0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x4f, 0x75, 0x74, 0x12, 0x0d, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72,
	0x70, 0x63, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0d,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x12, 0x0d, 0x2e,
	0x62, 0x75, 0x73, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x4f,
	0x75, 0x74, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x12, 0x0d, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e,
	0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x39, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x12, 0x0d, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72,
	0x70, 0x63, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0f,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12,
	0x0d, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x08, 0x58, 0x61, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x49,
	0x6e, 0x58, 0x61, 0x12, 0x0d, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72,
	0x70, 0x63, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0a,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x58, 0x61, 0x12, 0x0d, 0x2e, 0x62, 0x75, 0x73,
	0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0a, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x6e, 0x54, 0x63,
	0x63, 0x12, 0x0d, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x0b, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x54, 0x63, 0x63, 0x12, 0x0d, 0x2e, 0x62, 0x75, 0x73, 0x69,
	0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63, 0x1a, 0x0f, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e,
	0x42, 0x75, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x10, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x49, 0x6e, 0x54, 0x63, 0x63, 0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12,
	0x0d, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x49, 0x6e, 0x42, 0x53, 0x61, 0x67, 0x61, 0x12, 0x0d, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e,
	0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x38, 0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x42, 0x53, 0x61,
	0x67, 0x61, 0x12, 0x0d, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x70,
	0x63, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x12, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x49, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x42, 0x53, 0x61, 0x67,
	0x61, 0x12, 0x0d, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x13, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x42, 0x53, 0x61, 0x67,
	0x61, 0x12, 0x0d, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x11, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x59, 0x65, 0x73, 0x12,
	0x0d, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x4f, 0x75, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x0d, 0x2e, 0x62,
	0x75, 0x73, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x6e,
	0x52, 0x65, 0x64, 0x69, 0x73, 0x12, 0x0d, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x52, 0x65, 0x71,
	0x47, 0x72, 0x70, 0x63, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x38,
	0x0a, 0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x64, 0x69, 0x73, 0x12,
	0x0d, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x49, 0x6e, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x64, 0x69, 0x73, 0x12, 0x0d,
	0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x4f, 0x75, 0x74, 0x52, 0x65, 0x76, 0x65, 0x72, 0x74, 0x52, 0x65, 0x64, 0x69, 0x73, 0x12, 0x0d,
	0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x12, 0x0d, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e,
	0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63, 0x1a, 0x0f, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x42,
	0x75, 0x73, 0x69, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x42, 0x12, 0x0d, 0x2e, 0x62,
	0x75, 0x73, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72,
	0x65, 0x70, 0x61, 0x72, 0x65, 0x64, 0x52, 0x65, 0x64, 0x69, 0x73, 0x12, 0x0d, 0x2e, 0x62, 0x75,
	0x73, 0x69, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x72, 0x70, 0x63, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0b, 0x54, 0x72, 0x79, 0x47, 0x69, 0x76, 0x65, 0x47,
	0x69, 0x66, 0x74, 0x12, 0x11, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x47, 0x69, 0x76, 0x65, 0x47,
	0x69, 0x66, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x47, 0x69,
	0x76, 0x65, 0x47, 0x69, 0x66, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0e, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x47, 0x69, 0x76, 0x65, 0x47, 0x69, 0x66, 0x74, 0x12, 0x11, 0x2e,
	0x62, 0x75, 0x73, 0x69, 0x2e, 0x47, 0x69, 0x76, 0x65, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0e, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x47, 0x69, 0x76, 0x65, 0x47, 0x69, 0x66, 0x74, 0x12, 0x11, 0x2e, 0x62,
	0x75, 0x73, 0x69, 0x2e, 0x47, 0x69, 0x76, 0x65, 0x47, 0x69, 0x66, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x06, 0x54, 0x72, 0x79,
	0x50, 0x61, 0x79, 0x12, 0x0c, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e, 0x50, 0x61, 0x79, 0x52, 0x65,
	0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x09, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x50, 0x61, 0x79, 0x12, 0x0c, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x2e,
	0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x33, 0x0a, 0x09, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x12, 0x0c, 0x2e,
	0x62, 0x75, 0x73, 0x69, 0x2e, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x08, 0x5a, 0x06, 0x2e, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_busi_busi_proto_rawDescOnce sync.Once
	file_busi_busi_proto_rawDescData = file_busi_busi_proto_rawDesc
)

func file_busi_busi_proto_rawDescGZIP() []byte {
	file_busi_busi_proto_rawDescOnce.Do(func() {
		file_busi_busi_proto_rawDescData = protoimpl.X.CompressGZIP(file_busi_busi_proto_rawDescData)
	})
	return file_busi_busi_proto_rawDescData
}

var file_busi_busi_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_busi_busi_proto_goTypes = []interface{}{
	(*ReqGrpc)(nil),       // 0: busi.ReqGrpc
	(*BusiReply)(nil),     // 1: busi.BusiReply
	(*GiveGiftReq)(nil),   // 2: busi.GiveGiftReq
	(*GiveGiftRsp)(nil),   // 3: busi.GiveGiftRsp
	(*PayReq)(nil),        // 4: busi.PayReq
	(*emptypb.Empty)(nil), // 5: google.protobuf.Empty
}
var file_busi_busi_proto_depIdxs = []int32{
	0,  // 0: busi.Busi.TransIn:input_type -> busi.ReqGrpc
	0,  // 1: busi.Busi.TransOut:input_type -> busi.ReqGrpc
	0,  // 2: busi.Busi.TransInRevert:input_type -> busi.ReqGrpc
	0,  // 3: busi.Busi.TransOutRevert:input_type -> busi.ReqGrpc
	0,  // 4: busi.Busi.TransInConfirm:input_type -> busi.ReqGrpc
	0,  // 5: busi.Busi.TransOutConfirm:input_type -> busi.ReqGrpc
	5,  // 6: busi.Busi.XaNotify:input_type -> google.protobuf.Empty
	0,  // 7: busi.Busi.TransInXa:input_type -> busi.ReqGrpc
	0,  // 8: busi.Busi.TransOutXa:input_type -> busi.ReqGrpc
	0,  // 9: busi.Busi.TransInTcc:input_type -> busi.ReqGrpc
	0,  // 10: busi.Busi.TransOutTcc:input_type -> busi.ReqGrpc
	0,  // 11: busi.Busi.TransInTccNested:input_type -> busi.ReqGrpc
	0,  // 12: busi.Busi.TransInBSaga:input_type -> busi.ReqGrpc
	0,  // 13: busi.Busi.TransOutBSaga:input_type -> busi.ReqGrpc
	0,  // 14: busi.Busi.TransInRevertBSaga:input_type -> busi.ReqGrpc
	0,  // 15: busi.Busi.TransOutRevertBSaga:input_type -> busi.ReqGrpc
	0,  // 16: busi.Busi.TransOutHeaderYes:input_type -> busi.ReqGrpc
	0,  // 17: busi.Busi.TransOutHeaderNo:input_type -> busi.ReqGrpc
	0,  // 18: busi.Busi.TransInRedis:input_type -> busi.ReqGrpc
	0,  // 19: busi.Busi.TransOutRedis:input_type -> busi.ReqGrpc
	0,  // 20: busi.Busi.TransInRevertRedis:input_type -> busi.ReqGrpc
	0,  // 21: busi.Busi.TransOutRevertRedis:input_type -> busi.ReqGrpc
	0,  // 22: busi.Busi.QueryPrepared:input_type -> busi.ReqGrpc
	0,  // 23: busi.Busi.QueryPreparedB:input_type -> busi.ReqGrpc
	0,  // 24: busi.Busi.QueryPreparedRedis:input_type -> busi.ReqGrpc
	2,  // 25: busi.Busi.TryGiveGift:input_type -> busi.GiveGiftReq
	2,  // 26: busi.Busi.CommitGiveGift:input_type -> busi.GiveGiftReq
	2,  // 27: busi.Busi.CancelGiveGift:input_type -> busi.GiveGiftReq
	4,  // 28: busi.Busi.TryPay:input_type -> busi.PayReq
	4,  // 29: busi.Busi.CommitPay:input_type -> busi.PayReq
	4,  // 30: busi.Busi.CancelPay:input_type -> busi.PayReq
	5,  // 31: busi.Busi.TransIn:output_type -> google.protobuf.Empty
	5,  // 32: busi.Busi.TransOut:output_type -> google.protobuf.Empty
	5,  // 33: busi.Busi.TransInRevert:output_type -> google.protobuf.Empty
	5,  // 34: busi.Busi.TransOutRevert:output_type -> google.protobuf.Empty
	5,  // 35: busi.Busi.TransInConfirm:output_type -> google.protobuf.Empty
	5,  // 36: busi.Busi.TransOutConfirm:output_type -> google.protobuf.Empty
	5,  // 37: busi.Busi.XaNotify:output_type -> google.protobuf.Empty
	5,  // 38: busi.Busi.TransInXa:output_type -> google.protobuf.Empty
	5,  // 39: busi.Busi.TransOutXa:output_type -> google.protobuf.Empty
	5,  // 40: busi.Busi.TransInTcc:output_type -> google.protobuf.Empty
	1,  // 41: busi.Busi.TransOutTcc:output_type -> busi.BusiReply
	5,  // 42: busi.Busi.TransInTccNested:output_type -> google.protobuf.Empty
	5,  // 43: busi.Busi.TransInBSaga:output_type -> google.protobuf.Empty
	5,  // 44: busi.Busi.TransOutBSaga:output_type -> google.protobuf.Empty
	5,  // 45: busi.Busi.TransInRevertBSaga:output_type -> google.protobuf.Empty
	5,  // 46: busi.Busi.TransOutRevertBSaga:output_type -> google.protobuf.Empty
	5,  // 47: busi.Busi.TransOutHeaderYes:output_type -> google.protobuf.Empty
	5,  // 48: busi.Busi.TransOutHeaderNo:output_type -> google.protobuf.Empty
	5,  // 49: busi.Busi.TransInRedis:output_type -> google.protobuf.Empty
	5,  // 50: busi.Busi.TransOutRedis:output_type -> google.protobuf.Empty
	5,  // 51: busi.Busi.TransInRevertRedis:output_type -> google.protobuf.Empty
	5,  // 52: busi.Busi.TransOutRevertRedis:output_type -> google.protobuf.Empty
	1,  // 53: busi.Busi.QueryPrepared:output_type -> busi.BusiReply
	5,  // 54: busi.Busi.QueryPreparedB:output_type -> google.protobuf.Empty
	5,  // 55: busi.Busi.QueryPreparedRedis:output_type -> google.protobuf.Empty
	3,  // 56: busi.Busi.TryGiveGift:output_type -> busi.GiveGiftRsp
	5,  // 57: busi.Busi.CommitGiveGift:output_type -> google.protobuf.Empty
	5,  // 58: busi.Busi.CancelGiveGift:output_type -> google.protobuf.Empty
	5,  // 59: busi.Busi.TryPay:output_type -> google.protobuf.Empty
	5,  // 60: busi.Busi.CommitPay:output_type -> google.protobuf.Empty
	5,  // 61: busi.Busi.CancelPay:output_type -> google.protobuf.Empty
	31, // [31:62] is the sub-list for method output_type
	0,  // [0:31] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_busi_busi_proto_init() }
func file_busi_busi_proto_init() {
	if File_busi_busi_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_busi_busi_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGrpc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_busi_busi_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BusiReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_busi_busi_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiveGiftReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_busi_busi_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GiveGiftRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_busi_busi_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_busi_busi_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_busi_busi_proto_goTypes,
		DependencyIndexes: file_busi_busi_proto_depIdxs,
		MessageInfos:      file_busi_busi_proto_msgTypes,
	}.Build()
	File_busi_busi_proto = out.File
	file_busi_busi_proto_rawDesc = nil
	file_busi_busi_proto_goTypes = nil
	file_busi_busi_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BusiClient is the client API for Busi service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BusiClient interface {
	TransIn(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransOut(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransInRevert(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransOutRevert(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransInConfirm(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransOutConfirm(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	XaNotify(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransInXa(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransOutXa(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransInTcc(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransOutTcc(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*BusiReply, error)
	TransInTccNested(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransInBSaga(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransOutBSaga(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransInRevertBSaga(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransOutRevertBSaga(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransOutHeaderYes(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransOutHeaderNo(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransInRedis(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransOutRedis(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransInRevertRedis(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TransOutRevertRedis(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	QueryPrepared(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*BusiReply, error)
	QueryPreparedB(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	QueryPreparedRedis(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TryGiveGift(ctx context.Context, in *GiveGiftReq, opts ...grpc.CallOption) (*GiveGiftRsp, error)
	CommitGiveGift(ctx context.Context, in *GiveGiftReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CancelGiveGift(ctx context.Context, in *GiveGiftReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	TryPay(ctx context.Context, in *PayReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CommitPay(ctx context.Context, in *PayReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	CancelPay(ctx context.Context, in *PayReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type busiClient struct {
	cc grpc.ClientConnInterface
}

func NewBusiClient(cc grpc.ClientConnInterface) BusiClient {
	return &busiClient{cc}
}

func (c *busiClient) TransIn(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransOut(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransOut", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransInRevert(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransInRevert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransOutRevert(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransOutRevert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransInConfirm(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransInConfirm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransOutConfirm(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransOutConfirm", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) XaNotify(ctx context.Context, in *emptypb.Empty, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/XaNotify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransInXa(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransInXa", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransOutXa(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransOutXa", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransInTcc(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransInTcc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransOutTcc(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*BusiReply, error) {
	out := new(BusiReply)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransOutTcc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransInTccNested(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransInTccNested", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransInBSaga(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransInBSaga", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransOutBSaga(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransOutBSaga", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransInRevertBSaga(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransInRevertBSaga", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransOutRevertBSaga(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransOutRevertBSaga", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransOutHeaderYes(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransOutHeaderYes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransOutHeaderNo(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransOutHeaderNo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransInRedis(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransInRedis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransOutRedis(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransOutRedis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransInRevertRedis(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransInRevertRedis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TransOutRevertRedis(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TransOutRevertRedis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) QueryPrepared(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*BusiReply, error) {
	out := new(BusiReply)
	err := c.cc.Invoke(ctx, "/busi.Busi/QueryPrepared", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) QueryPreparedB(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/QueryPreparedB", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) QueryPreparedRedis(ctx context.Context, in *ReqGrpc, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/QueryPreparedRedis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TryGiveGift(ctx context.Context, in *GiveGiftReq, opts ...grpc.CallOption) (*GiveGiftRsp, error) {
	out := new(GiveGiftRsp)
	err := c.cc.Invoke(ctx, "/busi.Busi/TryGiveGift", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) CommitGiveGift(ctx context.Context, in *GiveGiftReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/CommitGiveGift", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) CancelGiveGift(ctx context.Context, in *GiveGiftReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/CancelGiveGift", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) TryPay(ctx context.Context, in *PayReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/TryPay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) CommitPay(ctx context.Context, in *PayReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/CommitPay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *busiClient) CancelPay(ctx context.Context, in *PayReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/busi.Busi/CancelPay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BusiServer is the server API for Busi service.
type BusiServer interface {
	TransIn(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TransOut(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TransInRevert(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TransOutRevert(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TransInConfirm(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TransOutConfirm(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	XaNotify(context.Context, *emptypb.Empty) (*emptypb.Empty, error)
	TransInXa(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TransOutXa(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TransInTcc(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TransOutTcc(context.Context, *ReqGrpc) (*BusiReply, error)
	TransInTccNested(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TransInBSaga(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TransOutBSaga(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TransInRevertBSaga(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TransOutRevertBSaga(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TransOutHeaderYes(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TransOutHeaderNo(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TransInRedis(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TransOutRedis(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TransInRevertRedis(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TransOutRevertRedis(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	QueryPrepared(context.Context, *ReqGrpc) (*BusiReply, error)
	QueryPreparedB(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	QueryPreparedRedis(context.Context, *ReqGrpc) (*emptypb.Empty, error)
	TryGiveGift(context.Context, *GiveGiftReq) (*GiveGiftRsp, error)
	CommitGiveGift(context.Context, *GiveGiftReq) (*emptypb.Empty, error)
	CancelGiveGift(context.Context, *GiveGiftReq) (*emptypb.Empty, error)
	TryPay(context.Context, *PayReq) (*emptypb.Empty, error)
	CommitPay(context.Context, *PayReq) (*emptypb.Empty, error)
	CancelPay(context.Context, *PayReq) (*emptypb.Empty, error)
}

// UnimplementedBusiServer can be embedded to have forward compatible implementations.
type UnimplementedBusiServer struct {
}

func (*UnimplementedBusiServer) TransIn(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransIn not implemented")
}
func (*UnimplementedBusiServer) TransOut(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransOut not implemented")
}
func (*UnimplementedBusiServer) TransInRevert(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransInRevert not implemented")
}
func (*UnimplementedBusiServer) TransOutRevert(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransOutRevert not implemented")
}
func (*UnimplementedBusiServer) TransInConfirm(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransInConfirm not implemented")
}
func (*UnimplementedBusiServer) TransOutConfirm(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransOutConfirm not implemented")
}
func (*UnimplementedBusiServer) XaNotify(context.Context, *emptypb.Empty) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method XaNotify not implemented")
}
func (*UnimplementedBusiServer) TransInXa(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransInXa not implemented")
}
func (*UnimplementedBusiServer) TransOutXa(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransOutXa not implemented")
}
func (*UnimplementedBusiServer) TransInTcc(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransInTcc not implemented")
}
func (*UnimplementedBusiServer) TransOutTcc(context.Context, *ReqGrpc) (*BusiReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransOutTcc not implemented")
}
func (*UnimplementedBusiServer) TransInTccNested(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransInTccNested not implemented")
}
func (*UnimplementedBusiServer) TransInBSaga(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransInBSaga not implemented")
}
func (*UnimplementedBusiServer) TransOutBSaga(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransOutBSaga not implemented")
}
func (*UnimplementedBusiServer) TransInRevertBSaga(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransInRevertBSaga not implemented")
}
func (*UnimplementedBusiServer) TransOutRevertBSaga(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransOutRevertBSaga not implemented")
}
func (*UnimplementedBusiServer) TransOutHeaderYes(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransOutHeaderYes not implemented")
}
func (*UnimplementedBusiServer) TransOutHeaderNo(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransOutHeaderNo not implemented")
}
func (*UnimplementedBusiServer) TransInRedis(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransInRedis not implemented")
}
func (*UnimplementedBusiServer) TransOutRedis(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransOutRedis not implemented")
}
func (*UnimplementedBusiServer) TransInRevertRedis(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransInRevertRedis not implemented")
}
func (*UnimplementedBusiServer) TransOutRevertRedis(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransOutRevertRedis not implemented")
}
func (*UnimplementedBusiServer) QueryPrepared(context.Context, *ReqGrpc) (*BusiReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryPrepared not implemented")
}
func (*UnimplementedBusiServer) QueryPreparedB(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryPreparedB not implemented")
}
func (*UnimplementedBusiServer) QueryPreparedRedis(context.Context, *ReqGrpc) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryPreparedRedis not implemented")
}
func (*UnimplementedBusiServer) TryGiveGift(context.Context, *GiveGiftReq) (*GiveGiftRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TryGiveGift not implemented")
}
func (*UnimplementedBusiServer) CommitGiveGift(context.Context, *GiveGiftReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommitGiveGift not implemented")
}
func (*UnimplementedBusiServer) CancelGiveGift(context.Context, *GiveGiftReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelGiveGift not implemented")
}
func (*UnimplementedBusiServer) TryPay(context.Context, *PayReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TryPay not implemented")
}
func (*UnimplementedBusiServer) CommitPay(context.Context, *PayReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CommitPay not implemented")
}
func (*UnimplementedBusiServer) CancelPay(context.Context, *PayReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CancelPay not implemented")
}

func RegisterBusiServer(s *grpc.Server, srv BusiServer) {
	s.RegisterService(&_Busi_serviceDesc, srv)
}

func _Busi_TransIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransIn(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransOut_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransOut(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransOut",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransOut(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransInRevert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransInRevert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransInRevert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransInRevert(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransOutRevert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransOutRevert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransOutRevert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransOutRevert(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransInConfirm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransInConfirm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransInConfirm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransInConfirm(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransOutConfirm_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransOutConfirm(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransOutConfirm",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransOutConfirm(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_XaNotify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(emptypb.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).XaNotify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/XaNotify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).XaNotify(ctx, req.(*emptypb.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransInXa_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransInXa(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransInXa",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransInXa(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransOutXa_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransOutXa(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransOutXa",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransOutXa(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransInTcc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransInTcc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransInTcc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransInTcc(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransOutTcc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransOutTcc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransOutTcc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransOutTcc(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransInTccNested_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransInTccNested(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransInTccNested",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransInTccNested(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransInBSaga_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransInBSaga(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransInBSaga",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransInBSaga(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransOutBSaga_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransOutBSaga(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransOutBSaga",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransOutBSaga(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransInRevertBSaga_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransInRevertBSaga(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransInRevertBSaga",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransInRevertBSaga(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransOutRevertBSaga_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransOutRevertBSaga(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransOutRevertBSaga",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransOutRevertBSaga(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransOutHeaderYes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransOutHeaderYes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransOutHeaderYes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransOutHeaderYes(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransOutHeaderNo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransOutHeaderNo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransOutHeaderNo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransOutHeaderNo(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransInRedis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransInRedis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransInRedis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransInRedis(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransOutRedis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransOutRedis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransOutRedis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransOutRedis(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransInRevertRedis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransInRevertRedis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransInRevertRedis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransInRevertRedis(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TransOutRevertRedis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TransOutRevertRedis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TransOutRevertRedis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TransOutRevertRedis(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_QueryPrepared_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).QueryPrepared(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/QueryPrepared",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).QueryPrepared(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_QueryPreparedB_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).QueryPreparedB(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/QueryPreparedB",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).QueryPreparedB(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_QueryPreparedRedis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqGrpc)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).QueryPreparedRedis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/QueryPreparedRedis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).QueryPreparedRedis(ctx, req.(*ReqGrpc))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TryGiveGift_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GiveGiftReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TryGiveGift(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TryGiveGift",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TryGiveGift(ctx, req.(*GiveGiftReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_CommitGiveGift_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GiveGiftReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).CommitGiveGift(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/CommitGiveGift",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).CommitGiveGift(ctx, req.(*GiveGiftReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_CancelGiveGift_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GiveGiftReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).CancelGiveGift(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/CancelGiveGift",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).CancelGiveGift(ctx, req.(*GiveGiftReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_TryPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).TryPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/TryPay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).TryPay(ctx, req.(*PayReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_CommitPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).CommitPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/CommitPay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).CommitPay(ctx, req.(*PayReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Busi_CancelPay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PayReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BusiServer).CancelPay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/busi.Busi/CancelPay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BusiServer).CancelPay(ctx, req.(*PayReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Busi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "busi.Busi",
	HandlerType: (*BusiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TransIn",
			Handler:    _Busi_TransIn_Handler,
		},
		{
			MethodName: "TransOut",
			Handler:    _Busi_TransOut_Handler,
		},
		{
			MethodName: "TransInRevert",
			Handler:    _Busi_TransInRevert_Handler,
		},
		{
			MethodName: "TransOutRevert",
			Handler:    _Busi_TransOutRevert_Handler,
		},
		{
			MethodName: "TransInConfirm",
			Handler:    _Busi_TransInConfirm_Handler,
		},
		{
			MethodName: "TransOutConfirm",
			Handler:    _Busi_TransOutConfirm_Handler,
		},
		{
			MethodName: "XaNotify",
			Handler:    _Busi_XaNotify_Handler,
		},
		{
			MethodName: "TransInXa",
			Handler:    _Busi_TransInXa_Handler,
		},
		{
			MethodName: "TransOutXa",
			Handler:    _Busi_TransOutXa_Handler,
		},
		{
			MethodName: "TransInTcc",
			Handler:    _Busi_TransInTcc_Handler,
		},
		{
			MethodName: "TransOutTcc",
			Handler:    _Busi_TransOutTcc_Handler,
		},
		{
			MethodName: "TransInTccNested",
			Handler:    _Busi_TransInTccNested_Handler,
		},
		{
			MethodName: "TransInBSaga",
			Handler:    _Busi_TransInBSaga_Handler,
		},
		{
			MethodName: "TransOutBSaga",
			Handler:    _Busi_TransOutBSaga_Handler,
		},
		{
			MethodName: "TransInRevertBSaga",
			Handler:    _Busi_TransInRevertBSaga_Handler,
		},
		{
			MethodName: "TransOutRevertBSaga",
			Handler:    _Busi_TransOutRevertBSaga_Handler,
		},
		{
			MethodName: "TransOutHeaderYes",
			Handler:    _Busi_TransOutHeaderYes_Handler,
		},
		{
			MethodName: "TransOutHeaderNo",
			Handler:    _Busi_TransOutHeaderNo_Handler,
		},
		{
			MethodName: "TransInRedis",
			Handler:    _Busi_TransInRedis_Handler,
		},
		{
			MethodName: "TransOutRedis",
			Handler:    _Busi_TransOutRedis_Handler,
		},
		{
			MethodName: "TransInRevertRedis",
			Handler:    _Busi_TransInRevertRedis_Handler,
		},
		{
			MethodName: "TransOutRevertRedis",
			Handler:    _Busi_TransOutRevertRedis_Handler,
		},
		{
			MethodName: "QueryPrepared",
			Handler:    _Busi_QueryPrepared_Handler,
		},
		{
			MethodName: "QueryPreparedB",
			Handler:    _Busi_QueryPreparedB_Handler,
		},
		{
			MethodName: "QueryPreparedRedis",
			Handler:    _Busi_QueryPreparedRedis_Handler,
		},
		{
			MethodName: "TryGiveGift",
			Handler:    _Busi_TryGiveGift_Handler,
		},
		{
			MethodName: "CommitGiveGift",
			Handler:    _Busi_CommitGiveGift_Handler,
		},
		{
			MethodName: "CancelGiveGift",
			Handler:    _Busi_CancelGiveGift_Handler,
		},
		{
			MethodName: "TryPay",
			Handler:    _Busi_TryPay_Handler,
		},
		{
			MethodName: "CommitPay",
			Handler:    _Busi_CommitPay_Handler,
		},
		{
			MethodName: "CancelPay",
			Handler:    _Busi_CancelPay_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "busi/busi.proto",
}
